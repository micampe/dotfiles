" options ---

syntax on
filetype plugin indent on

colorscheme quiet-mc

set encoding=utf-8
set scrolloff=1
set hidden
set splitright
set splitbelow
set nostartofline
set autoread
set completeopt=menuone,noinsert,noselect
set undofile

" Indentation
set nowrap
set tabstop=8
set shiftwidth=4
set softtabstop=4
set shiftround
set expandtab
set breakindent
set showbreak=\\\\

" Searching
set incsearch
set ignorecase
set smartcase
set infercase
set hlsearch

" Status bar
set ruler
set laststatus=2
set showcmd
set wildmenu
set wildmode=longest:full:lastused,full
set backspace=indent,eol,start
set title
set titlelen=30

" save backups, undo and swaps in the same dir
let s:vim_data_dir = $HOME . '/.local/var/vim/'
let &backupdir=s:vim_data_dir . 'backup//'
let &directory=s:vim_data_dir . 'swap//'
let &undodir=s:vim_data_dir . 'undo//'
let &viminfofile=s:vim_data_dir . 'viminfo'

if !isdirectory(&backupdir)
  call mkdir(&backupdir, 'p')
endif
if !isdirectory(&directory)
  call mkdir(&directory, 'p')
endif
if !isdirectory(&undodir)
  call mkdir(&undodir, 'p')
endif

let g:netrw_home = s:vim_data_dir

" mappings ---

nnoremap j gj
nnoremap k gk
nnoremap gj j
nnoremap gk k

" linear history undo
" https://github.com/zaboople/klonk/blob/master/TheGURQ.md
nnoremap u :earlier<cr>
nnoremap <C-r> :later<cr>

" write file with sudo
command! SudoWrite :execute ':silent write !sudo tee > /dev/null %' | :edit!
cnoreabbrev w!! SudoWrite

" make section object motions work when { is not at the beginning of the line
" see :help section
map [[ ?{<CR>w99[{
map ][ /}<CR>b99]}
map ]] j0[[%/{<CR>
map [] k$][%?}<CR>

" zoom current window into a tab instad of using :only to allow zoom out
nnoremap <c-w>o :tab split<cr>
tnoremap <c-w>o <c-w>:tab split<cr>

" files
set wildcharm=<c-z>
cnoremap <expr> %% fnameescape(expand("%:p:h")."/")
nmap <space>e :edit %%<c-z>
nmap <space>f :find %%<c-z>**/*

" buffers
noremap <space><space> :b#<cr>
noremap <space>U :ls<cr>:b 

" change current word
nnoremap c* *Ncgn

" nicer command line history navigation
cnoremap <C-p> <up>
cnoremap <C-n> <down>

" jump to first non-whitespace on line, jump to begining of line if already at first non-whitespace
nnoremap <expr> <silent> 0 col('.') == match(getline('.'),'\S')+1 ? '0' : '^'

" change to the directory of the current buffer.
nnoremap <space>cb :chdir %:p:h <bar> pwd<cr>
nnoremap <space>cp :call <SID>CdToRepoRoot()<cr>

" paste by selecting a register
nnoremap "p :reg <bar> silent exec 'normal! "'.input('>').'p'<CR>
nnoremap "P :reg <bar> silent exec 'normal! "'.input('>').'P'<CR>

" typos
cnoremap <expr> X (getcmdtype() is# ':' && empty(getcmdline())) ? 'x' : 'X'
cnoremap <expr> Q (getcmdtype() is# ':' && empty(getcmdline())) ? 'q' : 'Q'

" use vim-colortemplate to show highlight info
nnoremap <space>h :<c-u>call colortemplate#syn#toggle()<cr>

" functions ---

" change to the repo-root-directory of the current buffer.
function! s:CdToRepoRoot() abort
  let root = finddir('.git', expand('%:p:h') . ';' . $HOME)
  if !empty(root)
    let root = fnamemodify(root, ':h')
    execute('chdir ' . root)
    echo 'cd' root
  else
    echo 'Not in a git repository.'
  endif
endfunction
