[user]
    useConfigOnly = true
    name = Michele Campeotto
    email = micampe@micampe.it

[alias]
    ci = commit --verbose
    ca = commit --verbose --all
    co = checkout
    st = status --short --branch
    ff = merge --ff-only

    l = log --pretty=color
    g = log --graph --all --pretty=color
    head = log -n1
    last = log --pretty=color ORIG_HEAD..
    reset-date = !git commit --amend --date=\"$(date)\"
    ancestor = merge-base HEAD master
    amend = commit --amend

    branches = branch -a
    tags = tag
    stashes = stash list
    remotes = remote -v

    unstage = reset HEAD              # remove files from index (tracking)
    uncommit = reset --soft HEAD^     # go back before last commit, with files in uncommitted state
    discard = checkout --

    browse = "!open $(git remote get-url origin | sed s%git@github.com:%http://github.com/%)"

    ours = checkout --ours
    theirs = checkout --theirs

    #via http://stackoverflow.com/questions/5188320/how-can-i-get-a-list-of-git-branches-ordered-by-most-recent-commit
    recent-branches = !git for-each-ref --count=15 --sort=-committerdate refs/heads/ --format='%(refname:short)'

    subupdate = submodule update --init --recursive

    # via https://www.sethvargo.com/checkout-a-github-pull-request/
    pr = "!f() { git fetch origin pull/$1/head:pr-$1 && git checkout pr-$1; }; f"

[pretty]
    color = "format:%Cred%h%C(yellow)%d %Cblue%an %Cgreen%cr%Creset %s"

[core]
    excludesFile = ~/.gitignore-global
    attributesFile = ~/.gitattributes-global

[color]
    ui = auto
    diff = auto
    status = auto
    branch = auto
    interactive = auto

[credential]
    helper = osxkeychain

[branch]
    autoSetupRebase = always

[rerere]
    enabled = true
    autoUpdate = true

[status]
    submoduleSummary = true

[mergetool]
    prompt = false

[merge]
    tool = opendiff

[rebase]
    autoStash = true

[diff "plist"]
    textconv = plutil -convert xml1 -o -
[pull]
    rebase = true
